|Block2
HEX0[0] <= BlockDU:data.HEX0[0]
HEX0[1] <= BlockDU:data.HEX0[1]
HEX0[2] <= BlockDU:data.HEX0[2]
HEX0[3] <= BlockDU:data.HEX0[3]
HEX0[4] <= BlockDU:data.HEX0[4]
HEX0[5] <= BlockDU:data.HEX0[5]
HEX0[6] <= BlockDU:data.HEX0[6]
Clock_50 => BlockDU:data.Clock_50
Clock_50 => SM1:cu.clock
SW[0] => SM1:cu.reset
HEX1[0] <= BlockDU:data.HEX1[0]
HEX1[1] <= BlockDU:data.HEX1[1]
HEX1[2] <= BlockDU:data.HEX1[2]
HEX1[3] <= BlockDU:data.HEX1[3]
HEX1[4] <= BlockDU:data.HEX1[4]
HEX1[5] <= BlockDU:data.HEX1[5]
HEX1[6] <= BlockDU:data.HEX1[6]


|Block2|BlockDU:data
one_second <= lpm_counter0:inst.cout
rst_count_to_one_sec => lpm_counter0:inst.sclr
Clock_50 => lpm_counter0:inst.clock
Clock_50 => lpm_counter1:inst2.clock
Clock_50 => lpm_counter2:inst3.clock
en_count_to_one_sec => lpm_counter0:inst.cnt_en
nine_seconds <= inst6.DB_MAX_OUTPUT_PORT_TYPE
rst_sec_u => lpm_counter1:inst2.sclr
en_sec_u => lpm_counter1:inst2.cnt_en
50_seconds <= inst11.DB_MAX_OUTPUT_PORT_TYPE
rst_sec_t => lpm_counter2:inst3.sclr
en_sec_t => lpm_counter2:inst3.cnt_en
HEX0[0] <= 7447:inst4.OA
HEX0[1] <= 7447:inst4.OB
HEX0[2] <= 7447:inst4.OC
HEX0[3] <= 7447:inst4.OD
HEX0[4] <= 7447:inst4.OE
HEX0[5] <= 7447:inst4.OF
HEX0[6] <= 7447:inst4.OG
HEX1[0] <= 7447:inst5.OA
HEX1[1] <= 7447:inst5.OB
HEX1[2] <= 7447:inst5.OC
HEX1[3] <= 7447:inst5.OD
HEX1[4] <= 7447:inst5.OE
HEX1[5] <= 7447:inst5.OF
HEX1[6] <= 7447:inst5.OG


|Block2|BlockDU:data|lpm_counter0:inst
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
sclr => lpm_counter:LPM_COUNTER_component.sclr
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]
q[12] <= lpm_counter:LPM_COUNTER_component.q[12]
q[13] <= lpm_counter:LPM_COUNTER_component.q[13]
q[14] <= lpm_counter:LPM_COUNTER_component.q[14]
q[15] <= lpm_counter:LPM_COUNTER_component.q[15]
q[16] <= lpm_counter:LPM_COUNTER_component.q[16]
q[17] <= lpm_counter:LPM_COUNTER_component.q[17]
q[18] <= lpm_counter:LPM_COUNTER_component.q[18]
q[19] <= lpm_counter:LPM_COUNTER_component.q[19]
q[20] <= lpm_counter:LPM_COUNTER_component.q[20]
q[21] <= lpm_counter:LPM_COUNTER_component.q[21]
q[22] <= lpm_counter:LPM_COUNTER_component.q[22]
q[23] <= lpm_counter:LPM_COUNTER_component.q[23]
q[24] <= lpm_counter:LPM_COUNTER_component.q[24]
q[25] <= lpm_counter:LPM_COUNTER_component.q[25]


|Block2|BlockDU:data|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component
clock => cntr_i8j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_i8j:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_i8j:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
data[23] => ~NO_FANOUT~
data[24] => ~NO_FANOUT~
data[25] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_i8j:auto_generated.q[0]
q[1] <= cntr_i8j:auto_generated.q[1]
q[2] <= cntr_i8j:auto_generated.q[2]
q[3] <= cntr_i8j:auto_generated.q[3]
q[4] <= cntr_i8j:auto_generated.q[4]
q[5] <= cntr_i8j:auto_generated.q[5]
q[6] <= cntr_i8j:auto_generated.q[6]
q[7] <= cntr_i8j:auto_generated.q[7]
q[8] <= cntr_i8j:auto_generated.q[8]
q[9] <= cntr_i8j:auto_generated.q[9]
q[10] <= cntr_i8j:auto_generated.q[10]
q[11] <= cntr_i8j:auto_generated.q[11]
q[12] <= cntr_i8j:auto_generated.q[12]
q[13] <= cntr_i8j:auto_generated.q[13]
q[14] <= cntr_i8j:auto_generated.q[14]
q[15] <= cntr_i8j:auto_generated.q[15]
q[16] <= cntr_i8j:auto_generated.q[16]
q[17] <= cntr_i8j:auto_generated.q[17]
q[18] <= cntr_i8j:auto_generated.q[18]
q[19] <= cntr_i8j:auto_generated.q[19]
q[20] <= cntr_i8j:auto_generated.q[20]
q[21] <= cntr_i8j:auto_generated.q[21]
q[22] <= cntr_i8j:auto_generated.q[22]
q[23] <= cntr_i8j:auto_generated.q[23]
q[24] <= cntr_i8j:auto_generated.q[24]
q[25] <= cntr_i8j:auto_generated.q[25]
cout <= cntr_i8j:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Block2|BlockDU:data|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_i8j:auto_generated
clock => counter_reg_bit1a[25].CLK
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT
q[25] <= counter_reg_bit1a[25].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|Block2|BlockDU:data|lpm_counter1:inst2
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
sclr => lpm_counter:LPM_COUNTER_component.sclr
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|Block2|BlockDU:data|lpm_counter1:inst2|lpm_counter:LPM_COUNTER_component
clock => cntr_i3k:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_i3k:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_i3k:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_i3k:auto_generated.q[0]
q[1] <= cntr_i3k:auto_generated.q[1]
q[2] <= cntr_i3k:auto_generated.q[2]
q[3] <= cntr_i3k:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Block2|BlockDU:data|lpm_counter1:inst2|lpm_counter:LPM_COUNTER_component|cntr_i3k:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|Block2|BlockDU:data|lpm_counter1:inst2|lpm_counter:LPM_COUNTER_component|cntr_i3k:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|Block2|BlockDU:data|lpm_counter2:inst3
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
sclr => lpm_counter:LPM_COUNTER_component.sclr
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|Block2|BlockDU:data|lpm_counter2:inst3|lpm_counter:LPM_COUNTER_component
clock => cntr_72k:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_72k:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_72k:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_72k:auto_generated.q[0]
q[1] <= cntr_72k:auto_generated.q[1]
q[2] <= cntr_72k:auto_generated.q[2]
q[3] <= cntr_72k:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Block2|BlockDU:data|lpm_counter2:inst3|lpm_counter:LPM_COUNTER_component|cntr_72k:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|Block2|BlockDU:data|lpm_counter2:inst3|lpm_counter:LPM_COUNTER_component|cntr_72k:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|Block2|BlockDU:data|7447:inst4
OG <= 87.DB_MAX_OUTPUT_PORT_TYPE
C => 25.IN0
LTN => 25.IN1
LTN => 27.IN1
LTN => 29.IN1
LTN => 13.IN5
LTN => 38.IN3
BIN => 37.IN0
B => 27.IN0
D => 14.IN0
A => 29.IN0
RBIN => 15.IN0
OF <= 86.DB_MAX_OUTPUT_PORT_TYPE
OE <= 85.DB_MAX_OUTPUT_PORT_TYPE
RBON <= 13.DB_MAX_OUTPUT_PORT_TYPE
OD <= 84.DB_MAX_OUTPUT_PORT_TYPE
OC <= 83.DB_MAX_OUTPUT_PORT_TYPE
OB <= 82.DB_MAX_OUTPUT_PORT_TYPE
OA <= 81.DB_MAX_OUTPUT_PORT_TYPE


|Block2|BlockDU:data|7447:inst5
OG <= 87.DB_MAX_OUTPUT_PORT_TYPE
C => 25.IN0
LTN => 25.IN1
LTN => 27.IN1
LTN => 29.IN1
LTN => 13.IN5
LTN => 38.IN3
BIN => 37.IN0
B => 27.IN0
D => 14.IN0
A => 29.IN0
RBIN => 15.IN0
OF <= 86.DB_MAX_OUTPUT_PORT_TYPE
OE <= 85.DB_MAX_OUTPUT_PORT_TYPE
RBON <= 13.DB_MAX_OUTPUT_PORT_TYPE
OD <= 84.DB_MAX_OUTPUT_PORT_TYPE
OC <= 83.DB_MAX_OUTPUT_PORT_TYPE
OB <= 82.DB_MAX_OUTPUT_PORT_TYPE
OA <= 81.DB_MAX_OUTPUT_PORT_TYPE


|Block2|SM1:cu
reset => reg_fstate.lpm_counter2.OUTPUTSELECT
reset => reg_fstate.lpm_counter1.OUTPUTSELECT
reset => reg_fstate.lpm_counter0.OUTPUTSELECT
reset => reg_en_count_to_one_sec.OUTPUTSELECT
reset => reg_en_sec_u.OUTPUTSELECT
reset => reg_rst_count_to_one_sec.OUTPUTSELECT
reset => reg_rst_sec_u.OUTPUTSELECT
reset => reg_en_sec_t.OUTPUTSELECT
reset => en_count_to_one_sec.OUTPUTSELECT
reset => en_sec_u.OUTPUTSELECT
reset => rst_count_to_one_sec.OUTPUTSELECT
reset => rst_sec_u.OUTPUTSELECT
reset => en_sec_t.OUTPUTSELECT
clock => fstate~1.DATAIN
one_second => process_1.IN0
one_second => process_1.IN0
nine_seconds => process_1.IN1
nine_seconds => process_1.IN1
en_count_to_one_sec <= en_count_to_one_sec.DB_MAX_OUTPUT_PORT_TYPE
en_sec_u <= en_sec_u.DB_MAX_OUTPUT_PORT_TYPE
rst_count_to_one_sec <= rst_count_to_one_sec.DB_MAX_OUTPUT_PORT_TYPE
rst_sec_u <= rst_sec_u.DB_MAX_OUTPUT_PORT_TYPE
en_sec_t <= en_sec_t.DB_MAX_OUTPUT_PORT_TYPE
rst_sec_t <= <GND>


